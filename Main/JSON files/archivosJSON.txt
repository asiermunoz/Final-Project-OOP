MANEJO DE ARCHIVO EN FORMATO JSON: GSON google
library

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Main {
    public static void main(String[] args){
        LinkedList<Persona> album = new LinkedList<Persona>();
        album.add(new Persona("Asier", 18, 72.35));
        album.add(new Persona("Fernando", 18, 79.50));


        //Creacion de archivo
        GsonBuilder builder = new GsonBuilder(); //instancia de la clase para crear un archivo Gson
        builder.setPrettyPrinting();
        Gson gson = builder.create();

        String payload = gson.toJson(album);
        //System.out.println(payload);

        try{
            Files.write(Paths.get("output.json"), payload.getBytes());

        }
        catch(IOException ex){
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*
        int i = 0;
        for (i=0; i < album.size(); i++){
            System.out.println(album.get(i).getNombre());
            System.out.println(album.get(i).getEdad());
            System.out.println(album.get(i).getPeso());
        }
        */

        String recoveryPayload = "";

        try {
            byte[] bytes = Files.readAllBytes(Paths.get("output.json"));
            recoveryPayload = new String(bytes);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }

        Type personaListType = new TypeToken<LinkedList<Persona>>(){}.getType();
        album = gson.fromJson(recoveryPayload, personaListType);

        int i = 0;
        for (i=0; i < album.size(); i++){
            System.out.println(album.get(i).getNombre());
            System.out.println(album.get(i).getEdad());
            System.out.println(album.get(i).getPeso());
        }
    }

}